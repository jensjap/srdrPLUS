<div class="column row overlay-parent">
  <% eefps_qrcf = @eefps_qrcf_dict[[eefps.id, qrc.question_row_column_fields.first.id, t1&.id].to_s] %>
  <% unless eefps_qrcf %>
    <% eefps_qrcf = ExtractionsExtractionFormsProjectsSectionsQuestionRowColumnField.find_or_create_by(
      extractions_extraction_forms_projects_sections_type1: t1.blank? ? nil : eefps.link_to_type1.extractions_extraction_forms_projects_sections_type1s.where(type1_id: t1.id).first,
      extractions_extraction_forms_projects_section: eefps,
      question_row_column_field: qrc.question_row_column_fields.first
    ) %>
  <% end %>
  <% record = @records_dict[eefps_qrcf.id] %>
  <% unless record %>
    <% record = Record.find_or_create_by(recordable: eefps_qrcf) %>
  <% end %>
  <%= simple_form_for(record, url: '/', namespace: "record_#{record.id}", html: { data: { abide: '', 'live-validate': true } }) do |f| %>
    <%= f.error_notification %>
    <% options = qrc.question_row_columns_question_row_column_options.where(question_row_column_option_id: 1).collect { |opt| [opt.name, opt.id, { 'data-prereq': "prereq-#{opt.class}-#{opt.id}" }] } %>
    <%= f.input :name, label: false, as: :radio_buttons, disabled: true, collection: options, class: 'form-control', include_blank: '-- Select response --' %>
  <% end %>
</div>
