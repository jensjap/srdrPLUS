- section_name = section_name.present? ? section_name : 'Results'
- efp = @extraction.extraction_forms_projects_sections.first.extraction_forms_project
- extraction_forms_project_type = efp.extraction_forms_project_type

- t1_names = @eefpst1s.includes(:type1_type).map{ |eefpst1| eefpst1.type1_type&.name || "Uncategorized" }.uniq.sort

- if t1_names.empty?
  div N/A

- @eefpst1s.includes(:type1_type).map{ |eefpst1| eefpst1.type1_type&.name || "Uncategorized" }.uniq.sort.each do |t1_name|
  h1.text-2xl = "#{t1_name}"
  hr
  - @eefpst1s.left_joins(:type1_type).where(t1_name == "Uncategorized" ? { type1_type_id: nil } : { type1_types: { name: t1_name } }).each do |eefpst1|
    div.m-8
      h2.text-xl = "#{eefpst1.type1_name_and_description}"
      - if extraction_forms_project_type.id.eql?(1) && @extraction.results_section_ready_for_extraction?
        = render 'public_data/extraction/results/results_table', eefpst1: eefpst1
      - elsif extraction_forms_project_type.id.eql?(2) && @extraction.results_section_ready_for_extraction?
        = render 'public_data/extraction/results/diagnostic_test_results_table', eefpst1: eefpst1