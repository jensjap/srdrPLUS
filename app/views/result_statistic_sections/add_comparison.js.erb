( function() {
  toastr.info('<%= notice %>')
  $( '#results-panel' ).html( "<%= j( render partial: 'extractions/work/results' ) %>" ).foundation();

  var bind_record_saving_mechanism;
  bind_record_saving_mechanism = function() {
    var submitForm, timers;
    timers = {};
    submitForm = function(form) {
      return function() {
        return form.submit();
      };
    };
    $('form.edit_record select, form.edit_record input[type="checkbox"], form.edit_record input[type="radio"], form.edit_record input[type="number"]').change(function(e) {
      var $form, formId;
      e.preventDefault();
      $form = $(this).closest('form');
      formId = $form.attr('id');
      $form.addClass('dirty');
      if (formId in timers) {
        clearTimeout(timers[formId]);
      }
      return timers[formId] = setTimeout(submitForm($form), 750);
    });
    $('form.edit_record input, form.edit_record textarea').each(function() {
      var results;
      results = [];
      while ($(this).outerHeight() < this.scrollHeight + parseFloat($(this).css('borderTopWidth')) + parseFloat($(this).css('borderBottomWidth'))) {
        results.push($(this).height($(this).height() + 1));
      }
      return results;
    });
    return $('form.edit_record input, form.edit_record textarea').keyup(function(e) {
      var $form, code, formId, results;
      e.preventDefault();
      code = e.keyCode || e.which;
      if (code === 9 || code === 16 || code === 18 || code === 37 || code === 38 || code === 39 || code === 40 || code === 91) {
        return;
      }
      $form = $(this).closest('form');
      formId = $form.attr('id');
      $form.addClass('dirty');
      if (formId in timers) {
        clearTimeout(timers[formId]);
      }
      timers[formId] = setTimeout(submitForm($form), 750);
      results = [];
      while ($(this).outerHeight() < this.scrollHeight + parseFloat($(this).css('borderTopWidth')) + parseFloat($(this).css('borderBottomWidth'))) {
        results.push($(this).height($(this).height() + 1));
      }
      return results;
    });
  };

  // ---
  // generated by coffee-script 1.9.2

  bind_record_saving_mechanism();

  $( '.change-outcome-link' ).click( function( e ) {
    $( '#results-panel > .table-container' ).html( '<br><br><br><h1>loading..</h1>' )
    e.preventDefault();
  } );

  (function() {
    (function() {
      return $('.links.add-comparison').on('cocoon:before-insert', function() {
        return $(this).hide();
      }).on('cocoon:after-insert', function(e, insertedItem) {
        var bac_anova_handler, bac_select;
        $(insertedItem).find('.links.add-comparate-group a').click();
        $(insertedItem).find('.links.add-comparate-group a').click();
        $('.links.add-comparate-group a').hide();
        $(insertedItem).find('.links.add-comparate').each(function() {
          return $(this).find('a').click();
        });
        $('.nested-fields > .comparate-groups').find('.nested-fields.comparates').first().after($('<div style="text-align: center; font-weight: normal;">vs.</div>'));
        if ($('.wac-comparate-fields').length === 2) {
          $('.wac-comparate-fields:eq(1)').find('select option').filter(function() {
            return this.text.includes('(Baseline)');
          }).attr('selected', true);
        }
        $('.links.add-anova a').click();
        $('.links.add-anova a').addClass('disabled');
        $('.links.add-comparison a').addClass('disabled');
        bac_select = $(insertedItem).find('.bac-select').first();
        bac_anova_handler = function(event) {
          if ($(event.target).find('option:selected').first().val() === "000") {
            $(event.target).closest('.comparate-groups').children().hide();
            $(event.target).closest('.comparates').show();
            $(event.target).closest('.comparates').find('.add-comparate').hide();
            $('.submit-comparison').toggleClass('hide');
            return $('.submit-anova').toggleClass('hide');
          } else {
            $(event.target).closest('.comparate-groups').children().show();
            $(event.target).closest('.comparates').find('.add-comparate').show();
            $('.submit-comparison').toggleClass('hide');
            return $('.submit-anova').toggleClass('hide');
          }
        };
        if (bac_select) {
          bac_select.find('option').first().text('All Arms (ANOVA)').val('000');
          bac_select.change(bac_anova_handler);
          return bac_select.trigger('change');
        }
      });
    })();

  }).call(this);

} )();
