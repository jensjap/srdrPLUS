- if @project.has_duplicate_citations?
  div.row style="margin: 0;"
    div.columns.medium-12
      = link_to " (Dedupe citations in this project)", dedupe_citations_project_path(@project), method: :POST

div.row style="margin: 0;"
  div.columns.medium-9
    = simple_form_for @project do |form_project|
      #delete-citations-inner
        table#citations-table
          thead
            tr
              th Accession No.
              th RefID
              th Authors
              th Title
              th Edit
              th Delete?

          tbody
            - @citations.each do |citation|
              tr
                td style="text-align: center;" = citation.accession_number_alts
                td style="text-align: center;" = citation.refman
                td
                  div style="overflow: hidden; height: 18px;" = citation.authors_citations.map { |ac| [ac.ordering.position, ac.author.name] }.sort { |a,b| (a[0] || 0) <=> (b[0] || 0) }.map { |a| a[1] }.join('; ')
                td
                  div style="overflow: hidden; height: 18px;" = citation.name
                td style="text-align: center;" = link_to 'Edit', edit_citation_path(citation, project_id: @project.id)
                = form_project.simple_fields_for :citations_projects, @citations_projects_dict[citation.id] do |sf_cp|
                  td style="text-align: center;" = sf_cp.check_box :_destroy, id: "sf_cp-#{citation.id}", style: "margin: 0"

      #delete-citations-submit-row.m-10
        .float-right
          input#delete-citations-select-all.m-10 type="checkbox"
          label.m-10 for='delete-citations-select-all' = 'Select All'
          = form_project.submit 'Delete Selected Citations', class: "button alert float-right"

  div.columns.medium-3
    div#top-anchor(data-sticky-container)
      div.sticky(data-sticky data-top-anchor="top-anchor" data-btm-anchor="btm-anchor" data-margin-top="5" data-check-every="0")

        - projects_user = ProjectsUser.find_by user: current_user, project: @project
        - unless projects_user.nil? && current_user.admin?
          - new_import = projects_user.imports.build

          /span data-tooltip="" data-click-open="true" title="You can import citations from .ris, .csv, PubMed ID list or EndNote Library"

          div style='display:flex; flex-direction:row;'
            span.import-headline
              h5 Upload Citation File(s)
            span.import-tooltip-icon style="margin-left: 3px;" data-open="import-tooltip-content"
              i.fi-info style="color:#28b0f3;font-size:20px;"
          .reveal#import-tooltip-content data-reveal="" style="font-size:large;line-height:25px;"
            | You can upload the following file formats to add citations to this project:
            ul style="padding-top:15px;font-size:large;line-height:25px;"
              li
                a href="https://srdrplus.s3.amazonaws.com/sample_ris.ris"
                  | RIS File (.ris)
              li
                a href="https://srdrplus.s3.amazonaws.com/sample_csv.csv"
                  | Comma Separated File (.csv)
              li
                a href="https://srdrplus.s3.amazonaws.com/sample_pubmed.txt"
                  | PubMed ID List (.txt)
              li
                a href="https://srdrplus.s3.amazonaws.com/sample_endnote.enw"
                  | EndNote File (.enw)

          #dropzone-div
            input#ris-file-type-id.hide value="#{ FileType.find_by(name: '.ris').id }"
            input#csv-file-type-id.hide value="#{ FileType.find_by(name: '.csv').id }"
            input#endnote-file-type-id.hide value="#{ FileType.find_by(name: '.enl').id }"
            input#pubmed-file-type-id.hide value="#{ FileType.find_by(name: 'PubMed').id }"
            input#json-file-type-id.hide value="#{ FileType.find_by(name: '.json').id }"
            = simple_form_for(new_import, remote: true, authenticity_token: true) do |f|
              .form-inputs
                = f.input :projects_user_id, as: :hidden, input_html: { value: projects_user.id }
                = f.input :import_type_id, as: :hidden, input_html: { value: ImportType.find_by(name: 'Citation').id }
                = simple_fields_for new_import.imported_files.build do |i_f|
                  #fileDropzone.dropzone name='mainFileUploader' dropzone-path="#{imports_path}"
                    .fallback
                      = i_f.input :file_type_id, as: :select, required: true, collection: FileType.all, selected: FileType.first.id
                      = i_f.input :content, as: :file, label: 'Citation File'
                      .form-actions
                        = f.button :submit, 'Upload file', class:"small", id:"submit-all"

div.row#btm-anchor style="margin: 10px 0 0 0;"
  div.columns.medium-12
    = simple_form_for( @project,
                       url: project_path(@project),
                       html: { id: 'citations-form' } ) do |f|
      = f.error_notification
      = f.hidden_field :redirect_path, value: project_citations_path(@project)

      div
        = link_to_add_association 'Add Citation', f, :citations_projects, partial: 'projects/edit/added_citations_project_fields'
        '&nbsp;|
        = link_to_add_association 'Create New Citation', f, :citations, partial: 'projects/edit/citation_fields'
