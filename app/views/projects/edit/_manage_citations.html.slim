#delete-citations-modal.reveal.large data-reveal=""
  = simple_form_for @project do |form_project|
    #delete-citations-inner
      table
        thead
          tr
            th Accession No.
            th RefID
            th Authors
            th Title
            th Delete?

        tbody
          - @citations.each do |citation|
            tr
              td = citation.try(:pmid)
              td = citation.try(:refman)
              /td = citation.authors_citations.order(position: :asc).map{ |ca| ca.author.name }.join(', ')
              td = citation.authors_citations.map{ |ac| [ac.ordering.position, ac.author.name] }.sort{ |a,b| (a[0] || 0) <=> (b[0] || 0) }.map{|a| a[1]}.join('; ')
              td = citation.try(:name)
              = form_project.simple_fields_for :citations_projects, @citations_projects_dict[citation.id] do |sf_cp|
                td = sf_cp.check_box :_destroy, id: "sf_cp-#{citation.id}"

    #delete-citations-submit-row
      .float-right
        input#delete-citations-select-all[type="checkbox"]
        label[for='delete-citations-select-all'] = 'Select All'
        = form_project.submit 'Delete Selected Citations', class: "button alert float-right"

#citations-header[style="font-size: 1rem;margin-bottom:1.5rem;color:#410093;"]
  span> id="citations-count" 0
  |citations in this project
  - if @project.has_duplicate_citations?
    = link_to " (Dedupe citations in this project)", dedupe_citations_project_path(@project), method: :POST

div.row
  div.columns.medium-9
    = simple_form_for( @project,
                       remote: true,
                       url: api_v1_project_path(@project, format: :json),
                       html: { id: 'citations-form' } ) do |f|
      = f.error_notification
      #citations
        #citations-url.hide
          = api_v1_project_citations_url @project.id

        #search-div
          #search-box.input
              input.search type="text" placeholder='Search'
          #sort-button.button.secondary.small[sort-order="desc"]
            | DESCENDING
          select id='sort-select'
            option[value='citation-numbers'] PMID
            option[value='citation-title'] Title
            option[value='citation-authors'] Authors
            option[value='citation-journal'] Journal
            option[value='citation-journal-date'] Year

        #insert-citation-div[ style="margin-bottom: 1rem;" ]
          = link_to_add_association 'Add Citation', f, :citations_projects, partial: 'projects/edit/added_citations_project_fields', 'data-association-insertion-node' => '#cp-insertion-node', 'data-association-insertion-method' => 'prepend'
          '&nbsp;|
          = link_to_add_association 'Create New Citation', f, :citations, partial: 'projects/edit/citation_fields', 'data-association-insertion-node' => '#cp-insertion-node', 'data-association-insertion-method' => 'prepend'
          '&nbsp;|
          = link_to "Delete Citations", "javascript:;", data: { open: "delete-citations-modal" }

        #cp-insertion-node
        ul.accordion.list.form-inputs data-accordion='' data-multi-expand='false' data-allow-all-closed='true' id='citations-projects-list'
          /= f.simple_fields_for :citations_projects, @citations_projects do |c_p_f|
            = render 'projects/edit/citations_project_fields', f: c_p_f

          / NOTE: Using CitationsProject.first as the collection looks odd,
          /       but it immediately gets replaced by citations fetched from server
          /       and link_to_remove_associaton javascript works properly.
          = f.simple_fields_for :citations_projects, CitationsProject.first, include_id: false do |c_p_f|
            = render 'projects/edit/citations_project_fields', f: c_p_f
      #leyleyley
  div.columns.medium-3
    div#top-anchor(data-sticky-container)
      div.sticky(data-sticky data-top-anchor="top-anchor" data-btm-anchor="leyleyley" data-margin-bottom="0" data-check-every="0")

        - projects_user = ProjectsUser.find_by user: current_user, project: @project
        - new_import = projects_user.imports.build

        /span data-tooltip="" data-click-open="true" title="You can import citations from .ris, .csv, PubMed ID list or EndNote Library"

        div style='display:flex; flex-direction:row;'
          span.import-headline
            h5 Upload Citation File(s)
          span.import-tooltip-icon style="margin-left: 3px;" data-open="import-tooltip-content"
            i.fi-info style="color:#28b0f3;font-size:20px;"
        .reveal#import-tooltip-content data-reveal="" style="font-size:large;line-height:25px;"
          | You can upload the following file formats to add citations to this project:
          ul style="padding-top:15px;font-size:large;line-height:25px;"
            li
              a href="https://srdrplus.s3.amazonaws.com/sample_ris.ris"
                | RIS File (.ris)
            li
              a href="https://srdrplus.s3.amazonaws.com/sample_csv.csv"
                | Comma Separated File (.csv)
            li
              a href="https://srdrplus.s3.amazonaws.com/sample_pubmed.txt"
                | PubMed ID List (.txt)
            li
              a href="https://srdrplus.s3.amazonaws.com/sample_endnote.enw"
                | EndNote File (.enw)

        #dropzone-div
          input#ris-file-type-id.hide value="#{ FileType.find_by(name: '.ris').id }"
          input#csv-file-type-id.hide value="#{ FileType.find_by(name: '.csv').id }"
          input#endnote-file-type-id.hide value="#{ FileType.find_by(name: '.enl').id }"
          input#pubmed-file-type-id.hide value="#{ FileType.find_by(name: 'PubMed').id }"
          = simple_form_for new_import, authenticity_token: true do |f|
            .form-inputs
              = f.input :projects_user_id, as: :hidden, input_html: { value: projects_user.id }
              = f.input :import_type_id, as: :hidden, input_html: { value: ImportType.find_by(name: 'Citation').id }
              = simple_fields_for new_import.imported_files.build do |i_f|
                #fileDropzone.dropzone name='mainFileUploader'
                  .fallback
                    = i_f.input :file_type_id, as: :select, required: true, collection: FileType.all, selected: FileType.first.id
                    = i_f.input :content, as: :file, label: 'Citation File'
                    .form-actions
                      = f.button :submit, 'Upload file', class:"small", id:"submit-all"
