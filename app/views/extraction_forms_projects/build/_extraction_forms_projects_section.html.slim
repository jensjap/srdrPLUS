div x-data="$store.sharedExtractionStore"
  = render 'shared/alert_modal'
  div
    - if current_user.profile.advanced_mode && efps.extraction_forms_projects_section_type.name != 'Key Questions'

      div class="flex space-x-2 items-center h-10"
        h4 class="text-lg font-bold" #{ efps.section.name }
        div class="flex space-x-2"
          = link_to 'Edit Section', edit_extraction_forms_projects_section_path(efps), class: 'button tiny font-bold'
          - delete_url = extraction_forms_projects_section_path(efps)
          a href="#" @click.prevent="$store.sharedExtractionStore.openModal('#{delete_url}', 'Are you sure you want to delete this extractions form?')" class='button tiny alert font-bold' Remove Section

    div class="flex space-x-2 items-center h-10"
      h4 class="text-lg font-bold" Display Section
      div class="switch !mb-0" id="hide-switch"
        = simple_form_for(Statusing.new, url: api_v1_extraction_forms_projects_section_toggle_hiding_path(efps.id), remote: true, method: :post, html: { id: "hide-form-#{efps.id}" }) do |f|
          = f.input_field :status_id, checked: !efps.hidden , as: :boolean, boolean_style: :inline, class: 'switch-input', id: "status-id-#{efps.id}", name: "status-id-#{efps.id}"
          label.switch-paddle.switch-hidden for="status-id-#{efps.id}"
            span.show-for-sr Hide section
            span.switch-active.text-xs aria-hidden="true" Yes
            span.switch-inactive.text-xs aria-hidden="true" No

  .efps-container[data-efps-id="#{efps.id.to_s}"]

    == render 'extraction_forms_projects/build/' + efps.extraction_forms_projects_section_type.name.parameterize.underscore,
      efps: efps

javascript:
  $("#status-id-#{efps.id}").on('click', function() {
    $("#hide-form-#{efps.id}").submit();
  })

  document.addEventListener('alpine:init', () => {
    Alpine.store('sharedExtractionStore', {
      isAlertModalOpen: false,
      alertModalContent: '',
      deleteUrl: '',
      openModal(url, content) {
        this.deleteUrl = url;
        this.alertModalContent = content;
        this.isAlertModalOpen = true;
      },
      closeAlertModal() {
        this.isAlertModalOpen = false;
      },
      modalConfirmAction() {
        fetch(this.deleteUrl, {
          method: 'DELETE',
          headers: {
            'X-CSRF-Token': document.querySelector("meta[name='csrf-token']").getAttribute('content'),
            'Accept': 'application/json',
            'Content-Type': 'application/json'
          },
          credentials: 'include'
        })
          .then(response => {
            if (response.ok || response.status === 204) {
              window.location.reload();
            }
          })
          .catch(error => console.error('Error:', error))
          .finally(() => this.closeAlertModal());
      }
    });
  });
