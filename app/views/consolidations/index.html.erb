<div class="p-4 lg:p-8" x-data="consolidations">
  <div class="sm:flex sm:items-center">
    <div class="sm:flex-auto">
      <h1 class="text-xl font-bold">
        Comparison Tool
        <a
          class="text-base"
          href="/projects/<%= @project.id %>/consolidations?consolidation_beta_opt_out=true"
          >To go back to the old comparison tool click here</a
        >
      </h1>
      <p class="mt-2 text-sm text-gray-700">
        Create consolidated extractions by quickly identifying differences among
        extractions of the same citation
      </p>
    </div>
  </div>
  <template x-if="citationsArray == null"><div>Loading...</div></template>
  <div class="mt-8 flex flex-col">
    <div class="-my-2 -mx-4 overflow-x-auto sm:-mx-6 lg:-mx-8">
      <div class="inline-block min-w-full py-2 align-middle md:px-6 lg:px-8">
        <div class="flex space-x-2">
          <h2 class="text-lg font-bold">Consolidations</h2>
          <input
            class="!text-xs indent-1"
            type="text"
            x-model="consolidationSearchString"
            placeholder="Search..."
          />
        </div>
        <div
          class="overflow-hidden shadow ring-1 ring-black ring-opacity-5 md:rounded-lg mb-4 overflow-y-auto max-h-80"
          x-data="$store.deleteConfirmation"
        >
          <%= render 'shared/alert_modal' %>
          <table
            class="min-w-full divide-y divide-gray-300 overflow-y-scroll max-h-80"
          >
            <thead class="!sticky top-0 z-[1]">
              <tr>
                <th></th>
                <th
                  class="cursor-pointer"
                  @click="sort('ce_sort_by', 'citation_handle', 'ce_sort_direction', 'consolidated_extractions')"
                >
                  Citation (Sorted by Title)
                </th>
                <th></th>
                <th></th>
                <th
                  class="cursor-pointer"
                  @click="sort('ce_sort_by', 'status', 'ce_sort_direction', 'consolidated_extractions')"
                >
                  Work Status
                </th>
                <th
                  class="cursor-pointer"
                  @click="sort('ce_sort_by', 'approved_on', 'ce_sort_direction', 'consolidated_extractions')"
                >
                  Approval Status
                </th>
              </tr>
            </thead>
            <tbody>
              <template
                x-for="c_extraction in consolidated_extractions.filter(c_extraction => (new RegExp(consolidationSearchString, 'i')).test(c_extraction.citation_name + c_extraction.citation_handle))"
                :key="c_extraction.id"
              >
                <tr>
                  <td>
                    <a
                      :href="`/extractions/${c_extraction.id}/work`"
                      class="font-bold px-2"
                      >Work</a
                    >
                  </td>
                  <td class="inline-block">
                    <a :href="`/citations/${c_extraction.citation_id}`">
                      <div x-text="c_extraction.citation_handle"></div>
                      <div x-text="c_extraction.citation_name"></div>
                    </a>
                  </td>
                  <td class="text-center">
                    <button
                      @click="Alpine.store('deleteConfirmation').openAlertModal(`/extractions/${c_extraction.id}`, c_extraction.id, c_extraction.citation_name)"
                      class="p-2 w-32 text-white bg-red-800 cursor-pointer"
                    >
                      Delete
                    </button>
                  </td>
                  <td class="text-center">
                    <button
                      @click="reconsolidate(c_extraction)"
                      class="p-2 w-32 text-white bg-orange-500"
                      :class="{
                        'cursor-pointer': c_extraction.consolidated_extraction_status,
                        'cursor-not-allowed': c_extraction.consolidated_extraction_status === false,
                        'opacity-50': c_extraction.consolidated_extraction_status === false,
                      }"
                      x-text="c_extraction.consolidated_extraction_status ? 'Reconsolidate' : 'Loading...'"
                    ></button>
                  </td>
                  <td class="text-center">
                    <button
                      @click="toggleSectionCompletionStatus(c_extraction)"
                      x-text="c_extraction.status"
                      class="p-2 w-32 cursor-pointer text-white"
                      :class="{
                        'bg-green-900': c_extraction.status_id === 2,
                        'bg-yellow-600': c_extraction.status_id === 1,
                      }"
                    ></button>
                  </td>
                  <td class="text-center">
                    <button
                      @click="toggleApproval(c_extraction)"
                      x-text="c_extraction.approved_on === null ? 'Unapproved' : 'Approved'"
                      class="p-2 w-32 cursor-pointer text-white"
                      :class="{
                        'bg-green-900': c_extraction.approved_on !== null,
                        'bg-yellow-600': c_extraction.approved_on === null
                      }"
                    ></button>
                  </td>
                </tr>
              </template>
            </tbody>
          </table>
        </div>
        <div class="flex space-x-2">
          <h2 class="text-lg font-bold">Citations</h2>
          <input
            class="!text-xs indent-1"
            type="text"
            x-model="citationSearchString"
            placeholder="Search..."
          />
        </div>
        <template x-if="citationsArray != null">
          <div
            class="overflow-hidden shadow ring-1 ring-black ring-opacity-5 md:rounded-lg"
          >
            <table
              class="min-w-full divide-y divide-gray-300 overflow-y-scroll max-h-80"
            >
              <thead class="bg-gray-50 !sticky top-0 z-[1]">
                <tr>
                  <th
                    class="text-center text-sm font-semibold text-gray-900 cursor-pointer"
                    @click="sort('cp_sort_by', 'citation_year', 'cp_sort_direction', 'citationsArray')"
                  >
                    Year
                  </th>
                  <th
                    class="text-center text-sm font-semibold text-gray-900 cursor-pointer"
                    @click="sort('cp_sort_by', 'citation_title', 'cp_sort_direction', 'citationsArray')"
                  >
                    Citation
                  </th>
                  <th
                    class="text-center text-sm font-semibold text-gray-900 cursor-pointer"
                    @click="sort('cp_sort_by', 'no_of_extractions', 'cp_sort_direction', 'citationsArray')"
                  >
                    No. of Extractions
                  </th>
                  <th
                    class="text-center text-sm font-semibold text-gray-900 cursor-pointer"
                    @click="sort('cp_sort_by', 'differences', 'cp_sort_direction', 'citationsArray')"
                  >
                    Differences Found
                  </th>
                  <th
                    class="text-center text-sm font-semibold text-gray-900 cursor-pointer"
                    @click="sort('cp_sort_by', 'consolidated_extraction_status', 'cp_sort_direction', 'citationsArray')"
                  >
                    Consolidated Extraction Exists?
                  </th>
                  <th
                    class="text-center cursor-pointer"
                    @click="sort('cp_sort_by', 'consolidated_extraction', 'cp_sort_direction', 'citationsArray')"
                  >
                    Consolidated Extraction
                  </th>
                </tr>
              </thead>
              <tbody class="divide-y divide-gray-200 bg-white">
                <template
                  x-for="cp_obj in citationsArray.filter(cp_obj => (new RegExp(citationSearchString, 'i')).test(cp_obj.citation_year + cp_obj.citation_title))"
                  :key="cp_obj.citations_project_id"
                >
                  <tr>
                    <td
                      class="overflow-hidden text-sm font-medium text-gray-900"
                    >
                      <div x-text="cp_obj.citation_year"></div>
                    </td>
                    <td
                      class="overflow-hidden text-sm font-medium text-gray-900"
                    >
                      <div x-text="cp_obj.citation_title"></div>
                    </td>
                    <td
                      class="text-center whitespace-nowrap text-sm text-gray-500"
                    >
                      <div
                        x-text="cp_obj.extractions && cp_obj.extractions.length"
                      ></div>
                    </td>
                    <td
                      class="text-center whitespace-nowrap text-sm text-gray-500"
                    >
                      <div
                        class="p-1"
                        x-text="cp_obj.differences ? 'Yes' : 'No'"
                        :class="cp_obj.differences ? 'text-red-800' : 'text-green-800'"
                      ></div>
                    </td>
                    <td
                      class="text-center whitespace-nowrap text-sm text-gray-500"
                    >
                      <div
                        class="p-1"
                        x-text="
                          if (cp_obj.consolidated_extraction_status === null) {
                            return 'No'
                          } else if (cp_obj.consolidated_extraction_status === false) {
                            return 'Calculating...'
                          } else {
                            return cp_obj.consolidated_extraction_status
                          }
                        "
                        :class="
                          {
                            'text-red-800': cp_obj.consolidated_extraction_status == null,
                            'text-yellow-800': cp_obj.consolidated_extraction_status == 'Draft',
                            'text-green-800': cp_obj.consolidated_extraction_status == 'Complete'
                          }
                        "
                      ></div>
                    </td>
                    <td
                      class="text-center whitespace-nowrap text-sm font-medium"
                    >
                      <template
                        x-if="cp_obj.consolidated_extraction_status == null"
                      >
                        <div
                          class="p-1 drop-shadow rounded bg-green-800 text-white cursor-pointer"
                          @click="createConsolidatedExtraction(cp_obj.citations_project_id); cp_obj.consolidated_extraction_status = false;"
                        >
                          Create
                        </div>
                      </template>
                      <template
                        x-if="cp_obj.consolidated_extraction_status == false"
                      >
                        <div
                          class="p-1 drop-shadow rounded bg-green-800 text-white opacity-50 cursor-not-allowed"
                        >
                          Loading...
                        </div>
                      </template>
                      <template
                        x-if="cp_obj.consolidated_extraction_status != null && cp_obj.consolidated_extraction_status != false"
                      >
                        <a
                          :href="`/consolidations/null?citations_project_id=${cp_obj.citations_project_id}`"
                        >
                          <div
                            class="p-1 drop-shadow rounded bg-srdrpurple text-white cursor-pointer"
                          >
                            Continue
                          </div>
                        </a>
                      </template>
                    </td>
                  </tr>
                </template>
              </tbody>
            </table>
          </div>
        </template>
      </div>
    </div>
  </div>
</div>
<script>
  document.addEventListener("alpine:init", () => {
    Alpine.data("consolidations", () => ({
      citationsArray: null,
      consolidated_extractions: [],
      consolidationSearchString: "",
      citationSearchString: "",
      cp_sort_by: null,
      cp_sort_direction: 1,
      ce_sort_by: null,
      ce_sort_direction: 1,

      init() {
        this.fetch_results();
      },

      sort(sort, new_sort, sort_direction, array) {
        if (this[sort] !== new_sort) {
          this[sort_direction] = 1;
        } else {
          this[sort_direction] = this[sort_direction] * -1;
        }
        this[sort] = new_sort;
        this[array] = this[array].sort(
          (a, b) =>
            ("" + a[new_sort]).localeCompare("" + b[new_sort]) *
            this[sort_direction]
        );
      },

      async fetch_results() {
        const response = await fetch(location.href, {
          method: "GET",
          headers: {
            Accept: "application/json",
            "Content-Type": "application/json",
          },
        });
        const data = await response.json();
        this.citationsArray = data.pcg;
        this.consolidated_extractions = data.consolidated_extractions;
      },

      async toggleSectionCompletionStatus(c_extraction) {
        let newStatusId;
        if (c_extraction.status_id === 1) {
          newStatusId = 2;
        } else {
          newStatusId = 1;
        }

        const response = await fetch(
          `/statusings/${c_extraction.statusing_id}`,
          {
            method: "PATCH",
            headers: {
              Accept: "application/json",
              "Content-Type": "application/json",
              "X-Requested-With": "XMLHttpRequest",
              "X-CSRF-Token": document.querySelector("[name='csrf-token']")
                .content,
            },
            credentials: "same-origin",
            body: JSON.stringify({
              status_id: newStatusId,
            }),
          }
        );
        if (response.status >= 200 && response.status < 300) {
          toastr.success("Saved successfully", null, { timeOut: 1000 });
          this.fetch_results();
        } else {
          toastr.error("We've encountered an error", null, { timeOut: 1000 });
        }
      },

      async toggleApproval(extraction) {
        let url =
          extraction.approved_on === null
            ? `/extractions/${extraction.id}/approve`
            : `/extractions/${extraction.id}/disapprove`;
        const response = await fetch(url, {
          method: "POST",
          headers: {
            Accept: "application/json",
            "Content-Type": "application/json",
            "X-Requested-With": "XMLHttpRequest",
            "X-CSRF-Token": document.querySelector("[name='csrf-token']")
              .content,
          },
          credentials: "same-origin",
        });
        if (response.status >= 200 && response.status < 300) {
          toastr.success("Saved successfully", null, { timeOut: 1000 });
          this.fetch_results();
        } else {
          toastr.error("We've encountered an error", null, { timeOut: 1000 });
        }
      },

      async createConsolidatedExtraction(citations_project_id) {
        const response = await fetch(location.href, {
          method: "POST",
          headers: {
            Accept: "application/json",
            "Content-Type": "application/json",
            "X-Requested-With": "XMLHttpRequest",
            "X-CSRF-Token": document.querySelector("[name='csrf-token']")
              .content,
          },
          body: JSON.stringify({
            citations_project_id,
          }),
        });
        const data = await response.json();
        this.fetch_results();
      },

      reconsolidate(c_extraction) {
        if (
          c_extraction.consolidated_extraction_status &&
          confirm(
            "This will override existing data that can be auto consolidated"
          )
        ) {
          this.createConsolidatedExtraction(c_extraction.citations_project_id);
          c_extraction.consolidated_extraction_status = false;
          this.citationsArray.forEach((cp_obj) => {
            if (
              cp_obj.citations_project_id === c_extraction.citations_project_id
            ) {
              cp_obj.consolidated_extraction_status = false;
            }
          });
        }
      },
    }));
    Alpine.store("deleteConfirmation", {
      isAlertModalOpen: false,
      alertModalContent: "",
      deleteUrl: "",
      openAlertModal(url, extraction_id, extraction_name) {
        this.deleteUrl = url;
        if (extraction_name) {
          this.alertModalContent = `Warning! You are about to delete an Extraction with ID ${extraction_id}: "${extraction_name}" and any associated data with it. \nThis action cannot be undone. Please confirm to proceed.`;
        } else {
          this.alertModalContent = `Warning! You are about to delete an Extraction with ID ${extraction_id} and any associated data with it. \nThis action cannot be undone. Please confirm to proceed.`;
        }
        this.isAlertModalOpen = true;
      },
      closeAlertModal() {
        this.isAlertModalOpen = false;
      },
      modalConfirmAction() {
        fetch(this.deleteUrl, {
          method: "DELETE",
          headers: {
            "X-CSRF-Token": document
              .querySelector("meta[name='csrf-token']")
              .getAttribute("content"),
            Accept: "application/json",
            "Content-Type": "application/json",
          },
          credentials: "include",
        })
          .then((response) => {
            if (response.ok || response.status === 204) {
              window.location.reload();
            }
          })
          .catch((error) => console.error("Error:", error))
          .finally(() => this.closeAlertModal());
      },
    });
  });
</script>
